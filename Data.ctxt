#BlueJ class context
comment0.params=index\ field\ array
comment0.target=java.lang.String\ AccData(int,\ int,\ int)
comment0.text=This\ method\ retrieves\ value\ of\ the\ field\ of\ the\ index\ received\ \n\ as\ a\ parameter.\ \ \n\ -->0-Customer\ Data\ Array(Cust)\ \ \n\ -->1-Transaction\ Data\ Array(Trans)\ \n\ The\ method\ returns\ the\ index\ of\ the\ record\ holding\ the\ value.\ \n\ Uses\ the\ string-enabled\ linear\ search\ method.\n\ @param\ index\ takes\ in\ the\ index\ which's\ value\ needs\ to\ be\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ retrieved.\ \ \n\ @param\ field\ states\ which\ field\ of\ the\ two\ dimensional\ array\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ is\ to\ be\ searched.\ \n\ @param\ array\ states\ which\ array\ is\ to\ be\ searched.\n\ @throws\ An\ exception\ with\ the\ error\ if\ the\ operation\ fails.\ \ \n
comment1.params=data\ array\ append
comment1.target=int\ AddData(java.lang.String[],\ int,\ boolean)
comment1.text=Static\ method\ AddData\ stores\ the\ one\ dimensional\ array\ recieved\ \n\ as\ a\ parameter\ into\ the\ array\ specified.\ \ \n\ Updates\ the\ value\ of\ the\ array's\ size\ variable(TranSize/CustSize).\ \ \n\ Depending\ on\ the\ value\ of\ the\ append\ parameter,\ it\ either\ appends\ \n\ the\ data,\ or\ replaces\ it.\n\ There\ are\ (n)\ values\ in\ the\ one\ dimensional\ array\ when\ appending,\ \n\ which\ are\ inserted\ into\ the\ array.\n\ There\ are\ (n+1)\ values\ in\ the\ parameter\ array\ when\ it\ is\ to\ be\ \n\ replaced,\ the\ first\ one\ being\ the\ customer\ id.\n\ \n\ @param\ data[]\ contains\ the\ data\ to\ be\ added\ to\ the\ arrays.\n\ @param\ array\ states\ which\ array\ is\ to\ be\ searched.\n\ @param\ append\ determines\ if\ the\ data\ is\ to\ be\ appended\ to\ the\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ array,\ or\ has\ to\ replace\ some\ existing\ data.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ @return\ the\ index\ at\ which\ the\ data\ has\ been\ saved.\n
comment2.params=id\ array
comment2.target=void\ DelData(int,\ int)
comment2.text=Static\ method\ DelData\ deletes\ the\ record\ corresponding\ to\ the\ index\n\ recieved\ as\ a\ parameter\ from\ the\ specified\ array.\ \ \n\ Updates\ the\ value\ of\ the\ array's\ size\ variable(TranSize/CustSize).\ \ \n\ Pushes\ all\ the\ data\ one\ step\ up.\n\ \n\ @param\ id\ \ \ \ stores\ the\ id\ of\ the\ record\ to\ be\ deleted.\n\ @param\ array\ states\ which\ array\ is\ to\ be\ searched.\n\ \n\ @throws\ an\ exception\ with\ the\ error\ if\ the\ operation\ fails.\n
comment3.params=id\ array
comment3.target=int\ search(int,\ int)
comment3.text=This\ method\ finds\ index\ of\ the\ id\ recieved\ as\ a\ parameter.\ \ \n\ Parameter\ int\ id\ takes\ in\ the\ CustId/TransId\ which's\ index\ needs\ to\ be\ found.\n\ Parameter\ int\ array\ states\ which\ array\ is\ to\ be\ searched.\n\ -->0-Customer\ Data\ Array(Cust)\n\ -->1-Transaction\ Data\ Array(Cust)\n\ Returns\ the\ index\ of\ the\ record\ holding\ the\ id.\ \n\ Uses\ the\ efficient\ binary\ search\ method.\n\ \n\ @param\ id\ \ \ \ stores\ the\ id\ which\ is\ to\ be\ found.\n\ @param\ array\ states\ which\ array\ is\ to\ be\ searched.\n\ \n\ @throws\ an\ exception\ with\ the\ error\ if\ the\ operation\ fails.\n
comment4.params=inValue\ field\ array
comment4.target=int[]\ search(java.lang.String,\ int,\ int)
comment4.text=This\ returns\ finds\ index(s)\ of\ the\ value\ recieved\ as\ a\ parameter.\ \ \n\ Parameter\ int\ inValue\ takes\ in\ the\ value\ which's\ index\ needs\n\ to\ be\ found.\n\ Parameter\ field\ states\ which\ field\ of\ the\ two\ dimensional\n\ array\ is\ to\ be\ searched.\n\ Parameter\ int\ array\ states\ which\ array\ is\ to\ be\ searched.\n\ -->0-Customer\ Data\ Array(Cust)\ \ \n\ -->1-Transaction\ Data\ Array(Trans)\ \n\ Returns\ an\ array\ containing\ the\ index(s)\ of\ the\ record(s)\n\ holding\ the\ value.\ \n\ Uses\ the\ string-enabled\ linear\ search\ method.\n\ \n\ @param\ inValue\ contains\ the\ value\ to\ be\ found.\n\ @param\ field\ \ \ states\ which\ field\ of\ the\ two\ dimensional\ array\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ is\ to\ be\ searched.\ \n\ @param\ array\ \ \ states\ which\ array\ is\ to\ be\ searched.\n\ \n\ @throws\ an\ exception\ with\ the\ error\ if\ the\ operation\ fails.\ \ \n
comment5.params=
comment5.target=int\ totalCust()
comment5.text=This\ method\ returns\ the\ total\ number\ of\ \n\ customers\ present\ in\ the\ Data\ class.\n\ No\ parameters\ are\ passed\ to\ the\ method.\ \ \n\ @returns\ the\ total\ as\ an\ int\ value.\ \ \n
comment6.params=
comment6.target=int\ totalTrans()
comment6.text=This\ method\ returns\ the\ total\ number\ of\ \n\ transactions\ present\ in\ the\ Data\ class.\n\ No\ parameters\ are\ passed\ to\ the\ method.\ \ \n\ @returns\ the\ total\ as\ an\ int\ value.\ \ \n
comment7.params=
comment7.target=void\ dummyDataPopulator()
comment7.text=This\ method\ populates\ the\ arrays\ of\ \n\ the\ class\ with\ dummy\ values\ for\ \n\ testing\ this\ program.\n
numComments=8
